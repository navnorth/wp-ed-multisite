<?php
// Register Domain as Custom Post Type
add_action("init" , "register_domain_post_type");
/**
 * Register Domain as Custom Post Type Function
 *
 * Description
 */
function register_domain_post_type(){
    $labels = array(
        "name" => _x("Assessment Domains", "post type general name", PLUGIN_DOMAIN),
        "singular_name" => _x("Assessment Domain", "post type singular name", PLUGIN_DOMAIN),
        "menu_name" => _x("Domains", "admin menu" , PLUGIN_DOMAIN) ,
        "name_admin_bar" => _x("Domains", "add new on admin bar", PLUGIN_DOMAIN),
        "add_new" => _x("Add New", "domain", PLUGIN_DOMAIN),
        "add_new_item" => __("Add New Assessment Domain", PLUGIN_DOMAIN),
        "new_item" => __("New Assessment Domain", PLUGIN_DOMAIN),
        "edit_item" => __("Edit Assesement Domain", PLUGIN_DOMAIN),
        "view_item" => __("View Assessment Domain", PLUGIN_DOMAIN),
        "all_items" => __("All Assessment Domains", PLUGIN_DOMAIN),
        "search_items" => __("Search Assessment Domain", PLUGIN_DOMAIN),
        "not_found" => __("No assessment domains found", PLUGIN_DOMAIN)
    );
    
    $arguments = array(
        "labels" => $labels ,
        "description" => "Create Domain" ,
        "public" => TRUE,
        "show_ui" => TRUE,
        "menu_icon" => "dashicons-editor-help" ,
        "has_archive" => TRUE,
        "menu_position" => 30,
        "taxonomies" => array("post_tag"),
        "supports" => array( "title", "editor" , "thumbnail" , "author" , "revisions" ) ,
        "register_meta_box_cb" => "dimension_metaboxes"
    );
    
    register_post_type("domain", $arguments);
}

//Remove Default Domain Post Type Menu Generated by WordPress
add_action('admin_menu', 'remove_default_domain_menus', 999);
function remove_default_domain_menus(){
    //Remove default domain menu
    remove_menu_page( 'edit.php?post_type=domain' );
    
    // remove tags
    remove_submenu_page( 'edit.php?post_type=domain', 'edit-tags.php?taxonomy=post_tag&amp;post_type=domain' );
    
    //Remove Default Add New
    remove_submenu_page( 'edit.php?post_type=domain', 'post-new.php?post_type=domain' );
}


// Domain Dimension Box Setup Hook
add_action("load-post.php", "domain_dimension_box_setup");
add_action("load-post-new.php", "domain_dimension_box_setup");
/**
 * Domain Dimension Box Setup Function 
 *
 * Description
 */
function domain_dimension_box_setup(){
    add_action( "add_meta_boxes", "domain_dimension_box");
}
/**
 * Domain Dimension Post Meta Box Function
 *
 * Description
 */
function domain_dimension_box(){
    // add_meta_box(id, title, callback, page, context, priority, callback_args)
    add_meta_box(
        "domain-dimension-box",
        __("Dimensions", PLUGIN_DOMAIN),
        "display_domain_dimension_box",
        "domain",
        "normal",
        "high"
    );
}
// Domain Dimension Script Hook
add_action("admin_footer", "new_dimension_js");
/**
 * Domain Dimension Script Function
 *
 * Description
 */
function new_dimension_js(){ ?>
    <script type="text/javascript">
	jQuery(document).ready(function() {
            /**
             * New Video
             *
             * New dimension youtube video entry.
             */
            jQuery('#dimensions').delegate('.dimension .new-media', 'click', function() {
                var tr = jQuery('<tr />')
                    
                // Label
                var label = jQuery('<input />').attr({
                    type: 'text', 
                    placeholder: 'Label'
                })
                    tr.append(jQuery('<td />').attr('class', 'media-label').append(label))
                
                // Youtube
                var youtube = jQuery('<input />').attr({
                    type: 'text',
                    placeholder: 'Youtube'
                })
                    tr.append(jQuery('<td />').attr('class', 'media-youtube').append(youtube))
                
                // Checkbox
                for(var n = 1; n < 5; n++)
                    tr.append(jQuery('<td />').append(jQuery('<input />').attr('type', 'checkbox')))
                
                // Media Button
                var a = jQuery('<a />').attr({'href':'#', 'class':'delete-media'}).append(jQuery('<i />').attr('class', 'dashicons dashicons-trash'))
                
                    tr.append(jQuery('<td />').attr('align', 'center').append(a))
                
                var tbody = jQuery(this).parents('.dimension').find('.wp-list-table tbody')
                    tbody.append(tr)
            })
            /**
             * Remove Youtube
             *
             * Remove youtube youtube video entry.
             */
            jQuery('#dimensions').delegate('.dimension .delete-media', 'click', function(event) {
                event.preventDefault()
                jQuery(this).parents('tr').fadeOut('fast', function() {
                    jQuery(this).remove()
                })
            })
            /**
             * Move Dimension jQuery Event Handler
             *
             * Move dimension form up/down.
             */
            jQuery('#dimensions').delegate('.dimension .dimension-move', 'click', function(event) {
                event.preventDefault()
                
                if (jQuery(this).hasClass('down')) {
                    var down = jQuery(this).parents('.dimension').next('.dimension')
                    
                    if (down.length) {
                        var dimension = jQuery(this).parents('.dimension')
                        
                        var id = dimension.find('.wp-editor-area').attr('id')
                        
                            dimension = dimension.detach()
                            dimension.insertAfter(down)
                        
                        _ini_tinyMCE(id)
                        
                        _rearrange()
                    }
                } else {
                    var up = jQuery(this).parents('.dimension').prev('.dimension')
                    
                    if (up.length) {
                        var dimension = jQuery(this).parents('.dimension')
                        
                        var id = dimension.find('.wp-editor-area').attr('id')
                        
                            dimension = dimension.detach()
                            dimension.insertBefore(up)
                        
                        _ini_tinyMCE(id)
                    
                        _rearrange()
                    }
                }
            })
            
            /**
             * Remove Dimension jQuery Event Handler
             *
             * Removes the dimension entry in the form.
             */
            jQuery('#dimensions').delegate('.dimension .dimension-remove', 'click', function(event) {
                event.preventDefault()
                
                jQuery(this).parents('.dimension').fadeOut('fast', function() {
                    var id = jQuery(this).parents('.dimension').find('.wp-editor-area').attr('id')
                
                    tinyMCE.EditorManager.execCommand('mceRemoveEditor',true, id);
                    jQuery(this).remove()
                    
                    _rearrange()
                })
            })
            /**
             * New Dimension
             *
             * New dimension form.
             */
            jQuery("#new-dimension").click(function() {    
                var n = jQuery('#dimensions .dimension').length + 1
                
                jQuery.post(ajaxurl, {
                    action: 'new_dimension',
                    n: n
                }, function(response) {
                    try {
                        response = jQuery.parseJSON(response)
                        
                        if (response.status == "success") {
                            jQuery('#dimensions').append(response.data.html)
                            
                            _ini_tinyMCE(response.data.id)
                            
                            quicktags({
                                id: response.data.id,
                                buttons: 'strong,em,link,block,del,ins,img,ul,ol,li,code,more,close'
                            })
                        
                            QTags._buttonsInit();
                        }
                    } catch(e) {
                        
                    }
                })
            })
	
            // Trigger
            jQuery('#new-dimension').trigger('click')
            
            /**
             * Initialize tinyMCE
             *
             * Initialize tinyMCE instance.
             *
             * @param {integer} id The textarea id
             */
            function _ini_tinyMCE(id) { 
                if (tinyMCE.get(id)) {
                    tinyMCE.EditorManager.execCommand('mceRemoveEditor',true, id);
                    tinyMCE.EditorManager.execCommand('mceAddEditor',true, id);
                
                } else {
                    tinyMCE.init({
                        selector: '#' + id,
                        content_css: [
                            'http://localhost/gap-analysis/wp-includes/js/tinymce/skins/wordpress/wp-content.css?ver=4.2.2&wp-mce-4109-20150505',
                            'http://localhost/gap-analysis/wp-content/themes/twentyfifteen/css/editor-style.css?wp-mce-4109-20150505'
                        ],
                        theme: 'modern',
                        skin: 'lightgray',
                        language: 'en',
                        formats: {
                            alignleft: [
                                {
                                    selector: 'p,h1,h2,h3,h4,h5,h6,td,th,div,ul,ol,li',
                                    styles: {
                                        textAlign: 'left'
                                    },
                                    deep: false,
                                    remove: 'none'
                                },
                                {
                                    selector: 'img,table,dl.wp-caption',
                                    classes: [
                                        'alignleft'
                                    ],
                                    deep: false,
                                    remove: 'none'
                                }
                            ],
                            aligncenter: [
                                {
                                    selector: 'p,h1,h2,h3,h4,h5,h6,td,th,div,ul,ol,li',
                                    styles: {
                                        textAlign: 'center'
                                    },
                                    deep: false,
                                    remove: 'none'
                                },
                                {
                                    selector: 'img,table,dl.wp-caption',
                                    classes: [
                                        'aligncenter'
                                    ],
                                    deep: false,
                                    remove: 'none'
                                }
                            ],
                            alignright: [
                                {
                                    selector: 'p,h1,h2,h3,h4,h5,h6,td,th,div,ul,ol,li',
                                    styles: {
                                        textAlign: 'center'
                                    },
                                    deep: false,
                                    remove: 'none'
                                },
                                {
                                    selector: 'img,table,dl.wp-caption',
                                    classes: [
                                        'alignright'
                                    ],
                                    deep: false,
                                    remove: 'none'
                                }
                            ],
                            strikethrough: {
                                inline: 'del',
                                deep: true,
                                split: true
                            }
                        },
                        relative_urls: false,
                        remove_script_host: false,
                        convert_urls: false,
                        browser_spellcheck: true,
                        fix_list_elements: true,
                        entities: '38,amp,60,lt,62,gt',
                        entity_encoding: 'raw',
                        keep_styles: false,
                        preview_styles: 'font-family font-size font-weight font-style text-decoration text-transform',
                        end_container_on_empty_block: true,
                        wpeditimage_disable_captions: false,
                        wpeditimage_html5_captions: true,
                        plugins: 'charmap,colorpicker,hr,lists,media,paste,tabfocus,textcolor,fullscreen,wordpress,wpautoresize,wpeditimage,wpemoji,wpgallery,wplink,wpdialogs,wpview',
                        resize: "vertical",
                        menubar: false,
                        wpautop: true,
                        indent: false,
                        toolbar1: "bold,italic,underline,blockquote,strikethrough,bullist,numlist,alignleft,aligncenter,alignright,undo,redo,link,unlink,fullscreen",
                        toolbar2: '',
                        toolbar3: '',
                        toolbar4: '',
                        tabfocus_elements: ':prev,:next',
                        body_class: 'sample post-type-domain post-status-auto-draft locale-en-us',
                        wp_autoresize_on: true,
                        add_unload_trigger: false
                    }) 
                }
            }
            /**
             * Rearrange Dimension
             *
             * Rearrange dimension forms.
             */
            function _rearrange() {
                var n = 1
                
                jQuery('.dimension').each(function() {
                    jQuery(this).find('.dimension-count').text(n + '.')
                    
                    jQuery(this).find('.dimension-move').attr('class', 'dimension-move ' + ((n == 1) ? 'down' : 'up'))
                    jQuery(this).find('.dimension-move i').attr('class', 'dashicons dashicons-arrow-' + ((n == 1) ? 'down' : 'up') + '-alt')
                    n++
                })
            }
        });
    </script>
<?php
}
// New Dimension Hook
add_action("wp_ajax_new_dimension", "new_dimension_callback");
/**
 * New Dimension AJAX Function
 *
 * Description
 */
function new_dimension_callback(){
    $n = $_POST["n"];
    
    $id = uniqid("dimension-editor-");
    
    ob_start();
    include(GAT_PATH . "gat_template/new_dimension.php");
    
    $html = ob_get_clean();
    
    $data = array("id" => $id, "html" => $html);
    
    echo json_encode(array("status" => "success", "data" => $data));
    
    wp_die();
}
/**
 * Display Domain Dimension Box
 *
 * Description
 */
function display_domain_dimension_box(){
    include(GAT_PATH . "/gat_template/domain_dimension_box.php");
}

// New Domain Hook
add_action("save_post", "new_domain", 10, 2);
/**
 * New Domain Function
 */
function new_domain($domain_id, $domain){
    if($domain->post_type == "domain") {
        //wp_safe_redirect(site_url() . "/wp-admin/admin.php?page=get-organizations", 302);
    }
}